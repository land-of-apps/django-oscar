name: CI

on:
  pull_request:
  push:
    branches:
      - master
  schedule:
    - cron: "0 0 * * 0"

permissions:
  # Read the baseline artifact in order to perform the AppMap comparison.
  actions: read
  # Commit the AppMap configuration.
  # If the EndBug/add-and-commit is removed, this can be changed to 'read'.
  contents: write
  # Add check annotations to the source code when a problem is detected.
  checks: write
  # Add a comment to the pull request.
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Docker build target=source
        run: docker build --target source -t django-oscar -f Dockerfile.codechallenge .

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
          cache: "pip"

      - name: Update Pip
        run: python -m pip install --upgrade pip
      - name: Install Pip Test Packages
        run: pip install -e .[test]
      - name: Install requirements.txt
        run: pip install -r requirements.txt

      - name: Install AppMap tools
        uses: getappmap/install-action@v1
        with:
          install-appmap-library: false
          tools-url: https://github.com/getappmap/appmap-js/releases/download/%40appland%2Fappmap-context-api.26fbdf21/appmap-linux-x64

      - name: Run tests
        env:
          DATABASE_USER: postgres
          DATABASE_PASSWORD: postgres
          DATABASE_HOST: localhost
          DATABASE_PORT: 5432
        run: |
          pytest

      - name: Save AppMaps
        uses: actions/cache/save@v3
        if: always()
        with:
          path: ./tmp/appmap
          key: appmaps-${{ github.sha }}-${{ github.run_attempt }}

      - name: Index AppMaps
        run: |
          appmap index

      - name: Docker build (final)
        run: |
          cp -r /usr/local/bin/appmap .
          docker build --target final -t django-oscar -f Dockerfile.codechallenge .

      - name: Push to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          docker tag django-oscar registry.heroku.com/aictx-django-oscar/web
          docker login -u _ -p $HEROKU_API_KEY registry.heroku.com
          docker push registry.heroku.com/aictx-django-oscar/web
          heroku container:release -a aictx-django-oscar web

  appmap-analysis:
    if: always()
    needs: [test] # You may need to change this to match the name of the step that runs your tests.
    uses: getappmap/analyze-action/.github/workflows/appmap-analysis.yml@v1
    permissions:
      actions: read
      contents: read
      checks: write
      pull-requests: write
